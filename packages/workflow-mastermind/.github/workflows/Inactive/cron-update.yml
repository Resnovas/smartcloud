# name: Cron Updater
# on:
#   schedule:
#     - cron: '0 */12 * * *'
# jobs:
#   updater:
#     name: Automatically update workflow files
#     runs-on: ubuntu-latest
#     if: github.repository ! Videndum/Universal-GitAction-Workflows
#     steps:
#       - name: Get Configurations
#         uses: Videndum/manage-github-secrets@1.0.0-beta
#         with:
#           settings: ${{ secrets.SETTINGS }}
#           mode: 'environment'
#           token: ${{ secrets.GITHUB_TOKEN }}
#       - uses: peterjgrainger/action-create-branch@2.0.1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           branch: ${{env.auto_branchPrefix}}${{env.auto_branch}}_workflows
#       - name: Import GPG key
#         if: ${{env.gpg_enabled}} == true
#         id: import_gpg
#         uses: crazy-max/ghaction-import-gpg@v2
#         env:
#           GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
#           PASSPHRASE: ${{ secrets.PASSPHRASE }}
#           git_user_signingkey: ${{env.gpg_signingKey}}
#           git_commit_gpgsign: ${{env.gpg_commitSign}}
#           git_tag_gpgsign: ${{env.gpg_tagSign}}
#           git_push_gpgsign: ${{env.gpg_pushSign}}
#       - uses: actions/checkout@v2
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           ref: ${{env.auto_branchPrefix}}${{env.auto_branch}}_workflows
#           fetch-depth: 0
#       - name: Read package.json
#         id: package
#         uses: juliangruber/read-file-action@v1
#         with:
#           path: .github/workflow-version.txt
# - run: |
#     git clone https://github.com/Videndum/Universal-GitAction-Workflows.git .github/.tmp
#     cd .github/.tmp || exit
#     latestTag=$(git describe --tags --abbrev=0 --match v*)
#     git checkout "$latestTag"
#     if [ "${{ steps.package.outputs.content }}" == "$latestTag" ]; then
#       cd ../.. || exit
#       echo ::set-env name=latestTag::"$latestTag"
#       cp -f .github/.tmp/.github/allconfig.yml .github/allconfig.yml 2>> template-sync-log.txt
#       if [ ${{env.gpgEnable}} == false ]; then echo ::set-env name=commitName::${{ env.changelogName }} ; echo ::set-env name=commitEmail::${{ env.changelogEmail }} ; else echo ::set-env name=commitName::${{ steps.import_gpg.outputs.name }} ; echo ::set-env name=commitEmail::${{ steps.import_gpg.outputs.email }} ; fi
#     fi
# - name: Commit Config
#   id: commitConfig
#   uses: stefanzweifel/git-auto-commit-action@v4
#   with:
#     commit_message: 'chore!: update allconfig.yml to version ${{env.latestTag}} (Possibily Breaking Change)'
#     branch: ${{env.auto_branchPrefix}}${{env.auto_branch}}_workflows
#     commit_user_name: ${{env.commitName}}
#     commit_user_email: ${{env.commitEmail}}
#     commit_author: '${{env.commitName}} <${{env.commitEmail}}>'
#     commit_options: '${{env.commitOptions}}'
# - run: |
#     cp -fR .github/.tmp/.github/workflows .github/workflows 2>> template-sync-log.txt
# - name: Commit Workflows
#   id: commitWorkflow
#   uses: stefanzweifel/git-auto-commit-action@v4
#   with:
#     commit_message: 'chore!: update workflows to version ${{env.latestTag}} (Possibily Breaking Change)'
#     branch: ${{env.auto_branchPrefix}}${{env.auto_branch}}_workflows
#     commit_user_name: ${{env.commitName}}
#     commit_user_email: ${{env.commitEmail}}
#     commit_author: '${{env.commitName}} <${{env.commitEmail}}>'
#     commit_options: '${{env.commitOptions}}'
# - name: pull-request
#   uses: repo-sync/pull-request@v2
#   if: ${{steps.commitWorkflow.outputs.changes_detected}} == true || ${{steps.commitConfig.outputs.changes_detected}} == true
#   with:
#     github_token: ${{ secrets.BOT_TOKEN }}
#     source_branch: ${{env.auto_branchPrefix}}${{env.auto_branch}}_workflows
#     destination_branch: ${{env.autoDestination}}
#     pr_title: 'chore: BREAKING update template files to latest version (${{env.latestTag}})'
#     pr_body: |
#       This pull request has been automatically generated to update the workflow templates which we have created. This automatic update is very likely **BREAKING** for anyone who has modified files heavily.

#       Please ensure to review this change carefully.
# - name: Delete branch
#   if: ${{steps.commitWorkflow.outputs.changes_detected}} != true && ${{steps.commitConfig.outputs.changes_detected}} != true
#   uses: dawidd6/action-delete-branch@v3
#   with:
#     github_token: ${{github.token}}
#     branches: ${{env.auto_branchPrefix}}${{env.auto_branch}}_workflows
