import type { Condition } from '../util/index.js';
import type { ConditionBranchMatches } from './branch-matches.js';
import type { ConditionChangesSize } from './changes-size.js';
import type { ConditionFilesMatch } from './files-match.js';
import type { ConditionisApproved } from './is-approved.js';
import type { ConditionIsDraft } from './is-draft.js';
import type { ConditionPendingReview } from './pending-review.js';
import type { ConditionRequestedChanges } from './requested-changes.js';
export type PrCondition = Condition | ConditionBranchMatches | ConditionFilesMatch | ConditionIsDraft | ConditionChangesSize | ConditionPendingReview | ConditionRequestedChanges | ConditionisApproved;
export declare const handlers: (readonly ["branchMatches", (this: import("../../contexts/issues.js").Issues | import("../../contexts/pull-requests.js").PullRequests | import("../../contexts/projects.js").Project, pattern: ConditionBranchMatches, context: import("../index.js").PrProps) => Promise<boolean>] | readonly ["changesSize", (this: import("../../contexts/issues.js").Issues | import("../../contexts/pull-requests.js").PullRequests | import("../../contexts/projects.js").Project, condition: ConditionChangesSize, context: import("../index.js").PrProps) => boolean] | readonly ["filesMatch", (this: import("../../contexts/issues.js").Issues | import("../../contexts/pull-requests.js").PullRequests | import("../../contexts/projects.js").Project, condition: ConditionFilesMatch, context: import("../index.js").PrProps) => boolean] | readonly ["isApproved", (this: import("../../contexts/issues.js").Issues | import("../../contexts/pull-requests.js").PullRequests | import("../../contexts/projects.js").Project, condition: ConditionisApproved, context: import("../index.js").PrProps) => boolean] | readonly ["isDraft", (this: import("../../contexts/issues.js").Issues | import("../../contexts/pull-requests.js").PullRequests | import("../../contexts/projects.js").Project, condition: ConditionIsDraft, context: import("../index.js").PrProps) => boolean] | readonly ["pendingReview", (this: import("../../contexts/issues.js").Issues | import("../../contexts/pull-requests.js").PullRequests | import("../../contexts/projects.js").Project, condition: ConditionPendingReview, context: import("../index.js").PrProps) => boolean] | readonly ["requestedChanges", (this: import("../../contexts/issues.js").Issues | import("../../contexts/pull-requests.js").PullRequests | import("../../contexts/projects.js").Project, condition: ConditionRequestedChanges, context: import("../index.js").PrProps) => boolean])[];
