name: Issue Management

on:
  issues:

jobs:
  # Automatically applies labels according to title
  release-mastermind:
    name: Release Mastermind
    runs-on: ubuntu-latest
    steps:          
      # super Labeler
      - uses: actions/checkout@v2.3.4
      - uses: ./packages/release-mastermind/
        with:
          GITHUB_TOKEN: '${{ secrets.BOT_TOKEN }}'
          config: .github/allconfigs.json
  
  
  ## Sooon to be merged into @videndum/release-mastermind
  AutoAssign:
    name: Automatically Assign to branch and projects
    needs: release-mastermind
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Get Configurations
        uses: ./packages/variable-mastermind/
        with:
          settings: ${{ secrets.SETTINGS }}
          mode: 'environment'
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: if [ ${{env.projects_useOrg}} == true ]; then echo "projectPath=org/${{github.repository_owner}}" >> $GITHUB_ENV ; else echo "projectPath=${{github.repository}}" >> $GITHUB_ENV ; fi
      - name: Assign NEW issues to project DevOps
        uses: docker://takanabe/github-actions-automate-projects:v0.0.1
        if: github.event.action == 'opened' && ${{env.projects_enabled}} == true
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
          GITHUB_PROJECT_URL: https://github.com/${{env.projectPath}}/projects/${{env.projects_devOps}}
          GITHUB_PROJECT_COLUMN_NAME: ${{env.projects_devOpsColumn}}
        continue-on-error: true
      - name: Assign NEW bugs to project bugs
        uses: docker://takanabe/github-actions-automate-projects:v0.0.1
        if: contains(github.event.issue.labels.*.name, 'Type - Bug') && ${{env.projects_enabled}} == true
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
          GITHUB_PROJECT_URL: https://github.com/${{env.projectPath}}/projects/${{env.projects_issues}}
          GITHUB_PROJECT_COLUMN_NAME: ${{env.projects_issuesColumn}}
        continue-on-error: true
