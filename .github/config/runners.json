[
  {
    "$schema": "../../../schema/configs.json",
    "root": ".",
    "versioning": {
      "source": "milestones",
      "type": "SemVer"
    },
    "prereleaseName": "alpha",
    "sharedConfig": {
      "stale": {
        "staleLabel": "stale",
        "stale": {
          "days": 60,
          "comment": "This has been automatically marked as stale by the bot."
        },
        "abandoned": {
          "days": 30,
          "label": "abandoned",
          "comment": "This has been automatically marked as abandoned by the bot."
        }
      },
      "enforceConventions": {
        "condition": [
          {
            "requires": 1,
            "contexts": [
              "@resnovas/workflow-mastermind",
              "@resnovas/release-mastermind",
              "@resnovas/label-mastermind",
              "@resnovas/variable-mastermind",
              "@resnovas/convention-mastermind",
              "condition",
              "api",
              "util",
              "installer",
              "deps",
              "deps-dev"
            ],
            "condition": "semanticTitle"
          }
        ]
      },
      "labels": {
        "bug": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^bug(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "descriptionMatches",
              "condition": "/(created|new|opened|made)( an| a)? bug/i"
            }
          ]
        },
        "chore": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^chore(\\(.*\\))?(!)?:/i"
            }
          ]
        },
        "optimisation": {
          "requires": 2,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^opt(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^optimisation(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maint(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maintenance(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^type:(,| |Style|Refactoring|Revert|Deprecated|Removal)*optimisation/im"
            }
          ]
        },
        "style": {
          "requires": 2,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^style(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maint(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maintenance(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^type:(,| |Refactoring|Optimisation|Revert|Deprecated|Removal)*style/im"
            }
          ]
        },
        "refactor": {
          "requires": 2,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^ref(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^refactor(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maint(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maintenance(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^type:(,| |Style|Optimisation|Revert|Deprecated|Removal)*refactoring/im"
            }
          ]
        },
        "revert": {
          "requires": 2,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^revert(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maint(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maintenance(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^type:(,| |Style|Refactoring|Optimisation|Deprecated|Removal)*revert/im"
            }
          ]
        },
        "deprecated": {
          "requires": 2,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^dep(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^deprecated(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maint(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maintenance(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^type:(,| |Style|Refactoring|Optimisation|Revert|Removal)*deprecated/im"
            }
          ]
        },
        "removal": {
          "requires": 2,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^removal(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maint(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^maintenance(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^type:(,| |Style|Refactoring|Optimisation|Revert|Deprecated)*removal/im"
            }
          ]
        },
        "discussion": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^discussion(\\(.*\\))?(!)?:/i"
            }
          ]
        },
        "documentation": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^docs(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^documentation(\\(.*\\))?(!)?:/i"
            }
          ]
        },
        "feature": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^feat(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^enhance(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^feature(\\(.*\\))?(!)?:/i"
            },
            {
              "type": "titleMatches",
              "condition": "/^enhancement(\\(.*\\))?(!)?:/i"
            }
          ]
        },
        "fix": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^fix(\\(.*\\))?(!)?:/i"
            }
          ]
        },
        "workflow": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^.*\\((@videndum\\/)?workflow-mastermind\\)(!)?:/i"
            }
          ]
        },
        "releaseMastermind": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- package\\(s\\):.*(@videndum\\/)?release-mastermind.*/im"
            },
            {
              "type": "titleMatches",
              "condition": "/^.*\\((@videndum\\/)?release-mastermind\\)(!)?:/i"
            }
          ]
        },
        "labelMastermind": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- package\\(s\\):.*(@videndum\\/)?label-mastermind.*/im"
            },
            {
              "type": "titleMatches",
              "condition": "/^.*\\((@videndum\\/)?label-mastermind\\)(!)?:/i"
            }
          ]
        },
        "variableMastermind": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- package\\(s\\):.*(@videndum\\/)?variable-mastermind.*/im"
            },
            {
              "type": "titleMatches",
              "condition": "/^.*\\((@videndum\\/)?variable-mastermind\\)(!)?:/i"
            }
          ]
        },
        "condition": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^.*\\(condition\\)(!)?:/i"
            }
          ]
        },
        "api": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^.*\\(api\\)(!)?:/i"
            }
          ]
        },
        "contexts": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^.*\\(contexts\\)(!)?:/i"
            }
          ]
        },
        "util": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^.*\\(util\\)(!)?:/i"
            }
          ]
        },
        "installer": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^.*\\(installer\\)(!)?:/i"
            }
          ]
        },
        "deps": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^.*\\(deps\\)(!)?:/i"
            }
          ]
        },
        "depsDev": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "/^.*\\(deps-dev\\)(!)?:/i"
            }
          ]
        },
        "priorityCritical": {
          "requires": 1,
          "condition": [
            {
              "type": "titleMatches",
              "condition": "!:.*(critical|urgent)?|!?:.*(critical|urgent)"
            }
          ]
        }
      }
    },
    "pr": {
      "manageRelease": {
        "version": "bump",
        "labels": {
          "prerelease": "Versioning - Prerelease",
          "build": "Versioning - Build",
          "patch": "Versioning - Patch",
          "minor": "Versioning - Minor",
          "major": "Versioning - Major",
          "breaking": "Versioning - Breaking"
        },
        "createTag": true,
        "createRelease": true,
        "createMilestone": {},
        "createPackages": "npm publish",
        "createChangelog": {
          "includeIssues": true,
          "sections": [
            {
              "title": "Features Effectuated",
              "PRlabels": [
                "Type - Feature"
              ],
              "issueLabels": [],
              "includeCommitter": true,
              "linkPR": true
            },
            {
              "title": "Bugs Squashed",
              "PRlabels": [
                "Type - Fix"
              ],
              "issueLabels": [],
              "includeCommitter": true,
              "linkPR": true
            },
            {
              "title": "Maintenance & Dusting",
              "PRlabels": [
                "Type - Maintenance",
                "Type - Style",
                "Type - Documentation",
                "Type - Enhancement",
                "Type - Optimisation",
                "Type - Refactor"
              ],
              "issueLabels": [],
              "includeCommitter": true,
              "linkPR": true
            },
            {
              "title": "Abolishment",
              "PRlabels": [
                "Type - Revert",
                "Type - deprecated",
                "Type - Removal"
              ],
              "issueLabels": [],
              "includeCommitter": true,
              "linkPR": true
            },
            {
              "title": "Confession Time",
              "PRlabels": [],
              "issueLabels": [
                "Bug - Confirmed"
              ],
              "includeCommitter": true,
              "linkPR": true
            }
          ]
        },
        "condition": {}
      },
      "automaticApprove": {
        "condition": [
          {
            "requires": 1,
            "condition": [
              {
                "type": "creatorMatches",
                "condition": "/^dependabot/i"
              }
            ]
          }
        ]
      },
      "requestApprovals": {
        "all": {
          "reviewers": [
            "tgtgamer"
          ],
          "requires": 1,
          "condition": [
            {
              "type": "$not",
              "requires": 1,
              "condition": [
                {
                  "type": "creatorMatches",
                  "condition": "/^dependabot/i"
                }
              ]
            }
          ]
        }
      },
      "duplicateHotfix": {},
      "createMilestone": {},
      "labels": {
        "xs": {
          "requires": 1,
          "condition": [
            {
              "type": "changesSize",
              "min": 0,
              "max": 10
            }
          ]
        },
        "s": {
          "requires": 1,
          "condition": [
            {
              "type": "changesSize",
              "min": 10,
              "max": 30
            }
          ]
        },
        "m": {
          "requires": 1,
          "condition": [
            {
              "type": "changesSize",
              "min": 40,
              "max": 100
            }
          ]
        },
        "l": {
          "requires": 1,
          "condition": [
            {
              "type": "changesSize",
              "min": 100,
              "max": 500
            }
          ]
        },
        "xl": {
          "requires": 1,
          "condition": [
            {
              "type": "changesSize",
              "min": 500,
              "max": 1000
            }
          ]
        },
        "xxl": {
          "requires": 1,
          "condition": [
            {
              "type": "changesSize",
              "min": 1000
            }
          ]
        },
        "fixConfirmed": {
          "requires": 6,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] fix Confirmed by ((@.*& .*){4,}|(@.*& )*@(tgtgamer|videndum\\/.*))/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have fixed on a clean installation/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have fixed on a stable build/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have fixed on a development build/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have included logs or screenshots/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have linked any related/im"
            }
          ]
        },
        "devOpsReviewing": {
          "requires": 1,
          "condition": [
            {
              "type": "pendingReview",
              "condition": true
            }
          ]
        },
        "devOpsRejected": {
          "requires": 1,
          "condition": [
            {
              "type": "requestedChanges",
              "condition": true
            }
          ]
        }
      }
    },
    "issue": {
      "createBranch": {},
      "labels": {
        "android": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- platform:.*android/im"
            }
          ]
        },
        "aws": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- platform:.*aws/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- platform:.*amazon web service/im"
            }
          ]
        },
        "google": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- platform:.*google/im"
            }
          ]
        },
        "ios": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- platform:.*ios/im"
            }
          ]
        },
        "ubuntu": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- platform:.*ubuntu/im"
            }
          ]
        },
        "fedora": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- platform:.*fedora/im"
            }
          ]
        },
        "debian": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- platform:.*debian/im"
            }
          ]
        },
        "macos": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- platform:.*macos/im"
            }
          ]
        },
        "windows": {
          "requires": 1,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- platform:.*windows/im"
            }
          ]
        },
        "bugConfirmed": {
          "requires": 8,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] bug Confirmed by ((@.*& .*){4,}|(@.*& )*@(tgtgamer|videndum\\/.*))/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have reproduced on my application version/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have reproduced on a clean installation/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have reproduced on a development build/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have included logs or screenshots/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have contacted support/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have asked the community/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have linked any related/im"
            }
          ]
        },
        "fixConfirmed": {
          "requires": 6,
          "condition": [
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] fix Confirmed by ((@.*& .*){4,}|(@.*& )*@(tgtgamer|videndum\\/.*))/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have fixed on a clean installation/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have fixed on a stable build/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have fixed on a development build/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have included logs or screenshots/im"
            },
            {
              "type": "descriptionMatches",
              "condition": "/^- \\[x\\] have linked any related/im"
            }
          ]
        }
      }
    },
    "schedule": {}
  }
]